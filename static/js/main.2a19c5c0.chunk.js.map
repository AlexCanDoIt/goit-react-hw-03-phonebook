{"version":3,"sources":["components/Section/Section.module.css","components/ContactFilter/ContactFilter.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","container","ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","nameInputId","shortid","generate","numberInputId","this","text","htmlFor","id","input","type","pattern","required","onChange","button","Component","ContactFilter","Contact","onDelete","onClick","ContactList","contacts","onDeleteContact","list","map","item","App","filter","addContact","find","contact","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevContacts","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a19c5c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__32-55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"ContactFilter_text__2QvTA\",\"input\":\"ContactFilter_input__2ufwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Contact_text__3hUTv\",\"button\":\"Contact_button__24xBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1ocq_\",\"item\":\"ContactList_item__2CgDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__K3vG9\",\"text\":\"ContactForm_text__hTLsF\",\"input\":\"ContactForm_input__14EZy\",\"button\":\"ContactForm_button__1ktTo\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={styles.container}>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Section;","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number)\r\n\r\n    this.setState({name: '', number: ''})\r\n  }\r\n\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.container} onSubmit={this.handleSubmit}>\r\n        <label className={styles.text} htmlFor={this.nameInputId}>Name</label>\r\n        <input\r\n            id={this.nameInputId}\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n        <label className={styles.text} htmlFor={this.numberInputId}>Number</label>\r\n        <input\r\n            id={this.numberInputId}\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n        />\r\n        \r\n        <button className={styles.button} type=\"submit\">Add Contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css'\r\n\r\nconst ContactFilter = ({ value, onChange }) => (\r\n  <label className={styles.text}>\r\n    Find contacts by name\r\n    <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ContactFilter;","import PropTypes from 'prop-types';\r\nimport styles from './Contact.module.css'\r\n\r\nconst Contact = ({ name, number, onDelete }) => (\r\n  <>\r\n    <span className={styles.text}>{name}: {number}</span>\r\n    <button className={styles.button} type=\"button\" onClick={onDelete}>Delete</button>\r\n  </>\r\n)\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Contact;","import PropTypes from 'prop-types';\r\nimport Contact from '../Contact'\r\nimport styles from './ContactList.module.css'\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={styles.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={styles.item}>\r\n        <Contact name={name} number={number} onDelete={() => onDeleteContact(id)} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactList;","/* Modules */\r\nimport { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\n/* Components */\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactFilter from './components/ContactFilter';\r\nimport ContactList from './components/ContactList';\r\n\r\n/* Styles */\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevContacts = prevState.contacts;\r\n    const nextContacts = this.state.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n      contact => contact.name.toLowerCase().includes(normalizedFilter),\r\n      0,\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <>\r\n        <Section title={'Phonebook'}>\r\n          <ContactForm onSubmit={this.addContact} />\r\n        </Section>\r\n        <Section title={'Contacts'}>\r\n          <ContactFilter value={filter} onChange={this.changeFilter} />\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* Modules */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* Components */\nimport App from './App';\n\n/* Styles */\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}